{"ast":null,"code":"var _jsxFileName = \"/home/toobler/Vasudev/myapp/src/App.js\";\n// import React, { Component } from 'react'\n// import  './App.css'\n// class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state={\n//       newvalue:\" \",\n//       newItem:\"\",\n//       list:[]\n//     }\n//   }\n//   updateInput(key, value){\n//     this.setState({\n//       [key]: value\n//     });\n//   }\n//   addItem(){\n//     const newItem={\n//       id:1 +Math.random(),\n//       value: this.state.newItem.slice()\n//     };\n//     const list =[...this.state.list];\n//     list.push(newItem);\n//     this.setState({\n//       list,\n//       newItem:\" \"\n//     });\n//   }\n//   deleteItem(id){\n//     const list =[...this.state.list];\n//     const updatedList =list.filter(item => item.id !== id);\n//     this.setState({list: updatedList});\n//   }\n//   EditItem(id,index){\n//     //alert(this.state.list[0].id+\"  \"+id)\n//     // const list =[...this.state.list];\n//     // const updatedList =list.filter(item => item.id == id);\n//      alert(this.state.list[index].value);\n//      this.setState({\n//       });\n//   }\n//   handleChange(event) {\n//     this.setState({newvalue: event.target.value})\n//   }\n//   render(){\n//   return (\n//     <div className=\"App\">\n//       ADD an Item...\n//       <br/>\n//       <input type=\"text\" placeholder=\"Type item here...\" value={this.state.newItem} onChange={e => this.updateInput(\"newItem\", e.target.value)}></input>\n//       <button onClick={()=>this.addItem()}>addItem</button>\n//       <br />\n//       <ul>\n//         {this.state.list.map((item,index) =>{\n//           return(\n//             <table >\n//               <tr>\n//                 <td> <li key={item.id}><input type=\"text\"  onChange={this.handleChange} value={item.value} ></input> \n//                   <button onClick={() =>this.deleteItem(item.id)}>delete</button> \n//                   <button onClick={() =>this.EditItem(item.id,index)}>Submit</button>  </li></td>\n//               </tr>\n//             </table>\n//             // <li key={item.id}>{item.value}\n//             //   <button onClick={() =>this.deleteItem(item.id)}>delete</button>\n//             // </li>\n//           )\n//         })}\n//       </ul>\n//     </div>\n//   );\n// }\n// }\n// export default App;\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      list: [],\n      userInput2: \"\"\n    };\n  }\n\n  changeuserinput(input) {\n    this.setState({\n      userInput: input\n    });\n  }\n\n  addToList(input) {\n    let listArray = this.state.list;\n    listArray.push(input);\n    this.setState({\n      list: listArray,\n      userInput: \"\"\n    });\n  } // -----------------------------------------------------------------------------\n\n\n  changeuserinput2(input) {\n    this.setState({\n      userInput2: input\n    });\n  }\n\n  addToList2(input) {\n    alert(input); // let listArray= this.state.list;\n    // var index = listArray.indexOf(input2);\n    // alert(index);\n    // listArray[index]=input;\n    // this.setState({\n    //   list: listArray,\n    //   userInput:\"\"\n    // })\n  } // -----------------------------------------------------------------------------\n\n\n  removefromlist(input) {\n    let listArray = this.state.list;\n    listArray.pop(input);\n    this.setState({\n      list: listArray\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"to-do-list-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => this.changeuserinput(e.target.value),\n        value: this.state.userInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.addToList(this.state.userInput),\n        children: \"Press here \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.list.map(val => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [val, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => this.changeuserinput2(e.target.value),\n              value2: this.state.userInput2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.removefromlist(this.state.userInput),\n            children: \" delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.addToList2(this.state.userInput),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/home/toobler/Vasudev/myapp/src/App.js"],"names":["React","ToDoList","Component","constructor","props","state","userInput","list","userInput2","changeuserinput","input","setState","addToList","listArray","push","changeuserinput2","addToList2","alert","removefromlist","pop","render","e","target","value","map","val"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react'\n// import  './App.css'\n \n// class App extends Component {\n//   constructor(props){\n//     super(props);\n\n//     this.state={\n//       newvalue:\" \",\n//       newItem:\"\",\n//       list:[]\n\n//     }\n//   }\n\n//   updateInput(key, value){\n\n//     this.setState({\n//       [key]: value\n//     });\n//   }\n\n\n\n\n//   addItem(){\n\n//     const newItem={\n//       id:1 +Math.random(),\n//       value: this.state.newItem.slice()\n//     };\n\n\n//     const list =[...this.state.list];\n\n//     list.push(newItem);\n\n//     this.setState({\n//       list,\n//       newItem:\" \"\n//     });\n\n//   }\n\n//   deleteItem(id){\n    \n    \n\n//     const list =[...this.state.list];\n\n//     const updatedList =list.filter(item => item.id !== id);\n\n//     this.setState({list: updatedList});\n\n\n//   }\n  \n//   EditItem(id,index){\n    \n//     //alert(this.state.list[0].id+\"  \"+id)\n\n//     // const list =[...this.state.list];\n\n//     // const updatedList =list.filter(item => item.id == id);\n\n//      alert(this.state.list[index].value);\n\n//      this.setState({\n      \n//       });\n  \n\n      \n    \n//   }\n\n//   handleChange(event) {\n//     this.setState({newvalue: event.target.value})\n//   }\n\n\n//   render(){\n//   return (\n//     <div className=\"App\">\n      \n//       ADD an Item...\n//       <br/>\n\n//       <input type=\"text\" placeholder=\"Type item here...\" value={this.state.newItem} onChange={e => this.updateInput(\"newItem\", e.target.value)}></input>\n//       <button onClick={()=>this.addItem()}>addItem</button>\n     \n//       <br />\n//       <ul>\n//         {this.state.list.map((item,index) =>{\n//           return(\n//             <table >\n//               <tr>\n//                 <td> <li key={item.id}><input type=\"text\"  onChange={this.handleChange} value={item.value} ></input> \n//                   <button onClick={() =>this.deleteItem(item.id)}>delete</button> \n//                   <button onClick={() =>this.EditItem(item.id,index)}>Submit</button>  </li></td>\n  \n\n//               </tr>\n//             </table>\n//             // <li key={item.id}>{item.value}\n//             //   <button onClick={() =>this.deleteItem(item.id)}>delete</button>\n//             // </li>\n//           )\n//         })}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// }\n\n// export default App;\n\n\nimport React from 'react'\nimport './App.css'; \nclass ToDoList extends React.Component {\n   \n  constructor(props){\n    super(props);\n\n    this.state ={\n      userInput:\"\",\n      list: [],\n      userInput2:\"\"\n\n    }\n  }\n\n  changeuserinput(input){\n    this.setState({\n      userInput:input\n    })\n  }\n\n  addToList(input){\n    let listArray= this.state.list;\n\n    listArray.push(input);\n\n    this.setState({\n      list: listArray,\n      userInput:\"\"\n    })\n  }\n\n  // -----------------------------------------------------------------------------\n\n  changeuserinput2(input){\n    this.setState({\n      userInput2:input\n    })\n  }\n\n  addToList2(input){\n\n   \n    alert(input);\n    // let listArray= this.state.list;\n    // var index = listArray.indexOf(input2);\n    // alert(index);\n\n    // listArray[index]=input;\n\n    // this.setState({\n    //   list: listArray,\n    //   userInput:\"\"\n    // })\n  }\n\n\n\n  // -----------------------------------------------------------------------------\n\n\n  removefromlist(input){\n\n    \n    let listArray=this.state.list;\n\n    listArray.pop(input);\n\n    this.setState({\n      list:listArray\n    })\n  }\n\n\n    render() {\n      return (\n        <div className=\"to-do-list-main\">\n\n          <input \n          onChange={(e)=>this.changeuserinput(e.target.value)}\n          value={this.state.userInput}\n          type=\"text\"\n           ></input>\n\n           <button onClick={()=>this.addToList(this.state.userInput)} >Press here </button>\n\n           <ul>\n             {this.state.list.map((val)=><li> \n             {val}  \n             \n              <div>\n              <input type=\"text\" \n              onChange={(e)=>this.changeuserinput2(e.target.value)}\n              value2={this.state.userInput2}\n              ></input>\n             \n             </div>\n\n             <button onClick={()=>this.removefromlist(this.state.userInput)} > delete</button>\n             <button  onClick={()=>this.addToList2(this.state.userInput)}  >Submit</button>\n             \n               </li>)}\n         \n           </ul>\n\n        </div>\n\n        \n      );\n    }\n  }\n\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}